name: ðŸš€ Deploy Django Backend to EC2

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**' # Include backend changes
      - '.github/workflows/deploy-backend.yml'
      - '!frontend/**' # Exclude frontend changes

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      DB_HOST:     ${{ secrets.RDS_HOST }}
      DB_NAME:     ${{ secrets.RDS_NAME }}
      DB_USER:     ${{ secrets.RDS_USER }}
      DB_PASSWORD: ${{ secrets.RDS_PASSWORD }}
      DB_PORT:     ${{ secrets.RDS_PORT }}

    steps:
      - uses: actions/checkout@v4

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          cat << 'EOF' > ~/.ssh/id_rsa
          ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          EOF
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Validate connection
        run: |
          ssh -i ~/.ssh/id_rsa -p ${{ secrets.EC2_PORT }} \
            ubuntu@${{ secrets.EC2_HOST }} "echo 'SSH successful'"

      - name: Sync code
        run: |
          rsync -avz -e "ssh -i ~/.ssh/id_rsa -p ${{ secrets.EC2_PORT }}" \
            --exclude={'venv/','.git/','frontend/'} \
            ./ ubuntu@${{ secrets.EC2_HOST }}:~/app/

      - name: Deploy
        run: |
          ssh -i ~/.ssh/id_rsa -p ${{ secrets.EC2_PORT }} ubuntu@${{ secrets.EC2_HOST }} << 'DEPLOY'
          set -e
          cd ~/app
          
          # Python setup
          if ! [ -d venv ]; then
            python3 -m venv venv
          fi
          source venv/bin/activate
          pip install -r requirements.txt

          # Django
          python manage.py migrate
          python manage.py collectstatic --noinput

          # Services
          sudo systemctl restart gunicorn
          sudo systemctl restart nginx
          DEPLOY